// Code generated by protoc-gen-go.
// source: error.proto
// DO NOT EDIT!

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	error.proto
	idprovider.proto
	lepuscoin.proto
	passphrase.proto
	supervisor.proto

It has these top-level messages:
	Error
	User
	Device
	IDPCertCreateReq
	IDPCertCreateRsp
	AcquireCaptchaReq
	AcquireCaptchaRsp
	VerifyCaptchaReq
	VerifyCaptchaRsp
	RegisterUserReq
	RegisterUserRsp
	BindDeviceReq
	BindDeviceRsp
	VerifyDeviceReq
	VerifyDeviceRsp
	Account
	TX
	ExecResult
	QueryAddrResult
	QueryAddrResults
	LepuscoinInfo
	FarmerAccount
	FarmerOnLineReq
	FarmerOnLineRsp
	BlocksRange
	FarmerPingReq
	FarmerPingRsp
	FarmerConquerChallengeReq
	FarmerConquerChallengeRsp
	FarmerOffLineReq
	FarmerOffLineRsp
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrorType int32

const (
	// everything is ok
	ErrorType_NONE_ERROR ErrorType = 0
	// request params is invalid
	ErrorType_INVALID_PARAM ErrorType = 1
	// system error
	ErrorType_INTERNAL_ERROR ErrorType = 2
	// user already sign up
	ErrorType_ALREADY_SIGNUP ErrorType = 3
	// captcha is invalid
	ErrorType_INVALID_CAPTCHA ErrorType = 4
	// user id is invalid
	ErrorType_INVALID_USERID ErrorType = 5
	// device can't be recognized
	ErrorType_INVALID_DEVICE ErrorType = 6
	// mac address already been taken by other device
	ErrorType_ALREADY_DEVICE_MAC ErrorType = 7
	// alias already benn taken by other device
	ErrorType_ALREADY_DEVICE_ALIAS ErrorType = 8
	// farmer online
	ErrorType_INVALID_STATE_FARMER_ONLINE ErrorType = 9
	// farmer offline
	ErrorType_INVALID_STATE_FARMER_OFFLINE ErrorType = 10
	// farmer challenge fail
	ErrorType_FARMER_CHALLENGE_FAIL ErrorType = 11
	// invalid signature
	ErrorType_INVALID_SIGNATURE ErrorType = 12
)

var ErrorType_name = map[int32]string{
	0:  "NONE_ERROR",
	1:  "INVALID_PARAM",
	2:  "INTERNAL_ERROR",
	3:  "ALREADY_SIGNUP",
	4:  "INVALID_CAPTCHA",
	5:  "INVALID_USERID",
	6:  "INVALID_DEVICE",
	7:  "ALREADY_DEVICE_MAC",
	8:  "ALREADY_DEVICE_ALIAS",
	9:  "INVALID_STATE_FARMER_ONLINE",
	10: "INVALID_STATE_FARMER_OFFLINE",
	11: "FARMER_CHALLENGE_FAIL",
	12: "INVALID_SIGNATURE",
}
var ErrorType_value = map[string]int32{
	"NONE_ERROR":                   0,
	"INVALID_PARAM":                1,
	"INTERNAL_ERROR":               2,
	"ALREADY_SIGNUP":               3,
	"INVALID_CAPTCHA":              4,
	"INVALID_USERID":               5,
	"INVALID_DEVICE":               6,
	"ALREADY_DEVICE_MAC":           7,
	"ALREADY_DEVICE_ALIAS":         8,
	"INVALID_STATE_FARMER_ONLINE":  9,
	"INVALID_STATE_FARMER_OFFLINE": 10,
	"FARMER_CHALLENGE_FAIL":        11,
	"INVALID_SIGNATURE":            12,
}

func (x ErrorType) String() string {
	return proto.EnumName(ErrorType_name, int32(x))
}
func (ErrorType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Error struct {
	ErrorType ErrorType `protobuf:"varint,1,opt,name=errorType,enum=protos.ErrorType" json:"errorType,omitempty"`
	Message   string    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterType((*Error)(nil), "protos.Error")
	proto.RegisterEnum("protos.ErrorType", ErrorType_name, ErrorType_value)
}

func init() { proto.RegisterFile("error.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x40, 0x2d, 0x0a, 0xd8, 0x41, 0x71, 0x19, 0xc5, 0xd4, 0x68, 0x22, 0xf1, 0x44, 0x3c, 0x60,
	0xa2, 0x5f, 0x30, 0x69, 0x07, 0xd8, 0x64, 0x59, 0xc8, 0x74, 0x21, 0xf1, 0xb4, 0xd1, 0xa4, 0xf1,
	0x64, 0x20, 0xad, 0x17, 0x7f, 0xcd, 0xaf, 0x33, 0xb4, 0x14, 0x8d, 0xf1, 0xb4, 0xd9, 0x37, 0xef,
	0xcd, 0x65, 0xa0, 0x93, 0xe5, 0xf9, 0x3a, 0x1f, 0x6d, 0xf2, 0xf5, 0xc7, 0x1a, 0x5b, 0xe5, 0x53,
	0xdc, 0x09, 0x34, 0x79, 0x8b, 0xf1, 0x01, 0xc2, 0x72, 0xee, 0x3e, 0x37, 0x59, 0x14, 0x0c, 0x82,
	0x61, 0xf7, 0xb1, 0x57, 0xb9, 0xc5, 0x88, 0xeb, 0x81, 0xfc, 0x38, 0x18, 0x41, 0xfb, 0x3d, 0x2b,
	0x8a, 0x97, 0xb7, 0x2c, 0x6a, 0x0c, 0x82, 0x61, 0x28, 0xf5, 0xf7, 0xfe, 0xab, 0x01, 0xe1, 0x3e,
	0xc1, 0x2e, 0x80, 0x9d, 0x5b, 0xf6, 0x2c, 0x32, 0x17, 0x75, 0x80, 0x3d, 0x38, 0xd5, 0x76, 0x45,
	0x46, 0x27, 0x7e, 0x41, 0x42, 0x33, 0x15, 0x20, 0x42, 0x57, 0x5b, 0xc7, 0x62, 0xc9, 0xec, 0xb4,
	0xc6, 0x96, 0x91, 0x11, 0xa6, 0xe4, 0xd9, 0xa7, 0x7a, 0x62, 0x97, 0x0b, 0x75, 0x88, 0xe7, 0x70,
	0x56, 0xa7, 0x31, 0x2d, 0x5c, 0x3c, 0x25, 0x75, 0x54, 0xc5, 0x15, 0x5c, 0xa6, 0x2c, 0x3a, 0x51,
	0xcd, 0xdf, 0x2c, 0xe1, 0x95, 0x8e, 0x59, 0xb5, 0xf0, 0x12, 0xb0, 0x5e, 0x58, 0x31, 0x3f, 0xa3,
	0x58, 0xb5, 0x31, 0x82, 0x8b, 0x3f, 0x9c, 0x8c, 0xa6, 0x54, 0x1d, 0xe3, 0x2d, 0x5c, 0xd7, 0x5b,
	0x52, 0x47, 0x8e, 0xfd, 0x98, 0x64, 0xc6, 0xe2, 0xe7, 0xd6, 0x68, 0xcb, 0x2a, 0xc4, 0x01, 0xdc,
	0xfc, 0x2f, 0x8c, 0xc7, 0xa5, 0x01, 0x78, 0x05, 0xfd, 0x1d, 0x8b, 0xa7, 0x64, 0x0c, 0xdb, 0xc9,
	0x56, 0xd2, 0x46, 0x75, 0xb0, 0x0f, 0xbd, 0x7d, 0xac, 0x27, 0x96, 0xdc, 0x52, 0x58, 0x9d, 0xbc,
	0x56, 0x87, 0x79, 0xfa, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xb3, 0xf3, 0x63, 0xe2, 0xae, 0x01, 0x00,
	0x00,
}
